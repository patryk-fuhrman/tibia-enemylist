{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/enemy-list/enemy-list.component.html","webpack:///./src/app/enemy-list/enemy-list.component.scss","webpack:///./src/app/enemy-list/enemy-list.component.ts","webpack:///./src/app/enemy-list/enemy-list.module.ts","webpack:///./src/app/enemy-list/models/attributes.ts","webpack:///./src/app/enemy-list/models/enemy.ts","webpack:///./src/app/enemy-list/services/enemy-list.service.ts","webpack:///./src/app/enemy-list/services/loader.service.ts","webpack:///./src/app/loader/loader.component.html","webpack:///./src/app/loader/loader.component.scss","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AppComponent } from './app.component'\nimport { EnemyListComponent } from './enemy-list/enemy-list.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AppComponent,\n    },\n]\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core'\n\n@Component({\n    selector: 'app-root',\n    template: '<app-enemy-list></app-enemy-list><app-loader></app-loader>',\n})\nexport class AppComponent { }\n","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { LoaderComponent } from './loader/loader.component'\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { MatProgressSpinnerModule } from '@angular/material'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { EnemyListModule } from './enemy-list/enemy-list.module'\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoaderComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        AppRoutingModule,\n        MatProgressSpinnerModule,\n        EnemyListModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"filters\\\">\\n    <mat-checkbox [(ngModel)]=\\\"onlineOnly\\\" (change)=\\\"toggleOnlineOnly($event.checked)\\\">Online only</mat-checkbox>\\n</div>\\n\\n<table mat-table [dataSource]=\\\"enemies\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n        <th class=\\\"name\\\" mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let enemy\\\"> {{enemy.attributes.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"level\\\">\\n        <th class=\\\"level\\\" mat-header-cell *matHeaderCellDef> Level </th>\\n        <td mat-cell *matCellDef=\\\"let enemy\\\"> {{enemy.attributes.level}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"vocation\\\">\\n        <th class=\\\"vocation\\\" mat-header-cell *matHeaderCellDef> Vocation </th>\\n        <td mat-cell *matCellDef=\\\"let enemy\\\"> {{enemy.attributes.vocation}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"reason\\\">\\n        <th class=\\\"reason\\\" mat-header-cell *matHeaderCellDef> Reason </th>\\n        <td mat-cell *matCellDef=\\\"let enemy\\\"> {{enemy.attributes.reason}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"payment\\\">\\n        <th class=\\\"payment\\\" mat-header-cell *matHeaderCellDef> Payment </th>\\n        <td mat-cell *matCellDef=\\\"let enemy\\\"> {{enemy.attributes.payment}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"created_at\\\">\\n        <th class=\\\"created\\\" mat-header-cell *matHeaderCellDef> Hunted since </th>\\n        <td mat-cell *matCellDef=\\\"let enemy\\\"> {{enemy.attributes.created_at | date}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","module.exports = \":host table {\\n  width: 100%; }\\n  :host table th.name {\\n    width: 15%; }\\n  :host table th.level {\\n    width: 5%; }\\n  :host table th.vocation {\\n    width: 5%; }\\n  :host table th.reason {\\n    width: 50%; }\\n  :host table th.payment {\\n    width: 15%; }\\n  :host table th.created {\\n    width: 10%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyeWsuZnVocm1hbi9Eb2N1bWVudHMvV29ya3NwYWNlL3RpYmlhLWVuZW15bGlzdC9zcmMvYXBwL2VuZW15LWxpc3QvZW5lbXktbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLFlBQVcsRUEyQmQ7RUE3Qkw7SUFNZ0IsV0FBVSxFQUNiO0VBUGI7SUFVZ0IsVUFBUyxFQUNaO0VBWGI7SUFjZ0IsVUFDSixFQUFDO0VBZmI7SUFrQmdCLFdBQVUsRUFDYjtFQW5CYjtJQXNCZ0IsV0FBVSxFQUNiO0VBdkJiO0lBMEJnQixXQUFVLEVBQ2IiLCJmaWxlIjoic3JjL2FwcC9lbmVteS1saXN0L2VuZW15LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgdGFibGUge1xuICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICB0aCB7XG4gICAgICAgICAgICAmLm5hbWUge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxNSU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYubGV2ZWwge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1JTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi52b2NhdGlvbiB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUlXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYucmVhc29uIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmLnBheW1lbnQge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxNSU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYuY3JlYXRlZCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iXX0= */\"","import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { Subject } from 'rxjs'\nimport { take, takeUntil } from 'rxjs/operators'\nimport { Enemy } from './models/enemy'\nimport { EnemyListService } from './services/enemy-list.service'\n\n@Component({\n    selector: 'app-enemy-list',\n    templateUrl: './enemy-list.component.html',\n    styleUrls: ['./enemy-list.component.scss'],\n})\nexport class EnemyListComponent implements OnInit, OnDestroy {\n\n    public onlineOnly: boolean = false\n\n    public enemies: Enemy[] = []\n\n    public displayedColumns: string[] = ['name', 'level', 'vocation', 'reason', 'payment', 'created_at']\n\n    private destroyed$: Subject<void> = new Subject()\n\n    constructor(\n        private enemyListService: EnemyListService,\n    ) { }\n\n    public ngOnInit(): void {\n        this.getEnemies(false)\n    }\n\n    public ngOnDestroy(): void {\n        this.destroyed$.next()\n    }\n\n    public toggleOnlineOnly(checked: boolean): void {\n        this.getEnemies(checked)\n    }\n\n    public getEnemies(online: boolean): void {\n        this.enemyListService\n            .getHuntedPlayers(online)\n            .pipe(\n                takeUntil(this.destroyed$),\n                take(1),\n            )\n            .subscribe(enemies => this.enemies = enemies)\n    }\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { MatCheckboxModule, MatTableModule } from '@angular/material'\nimport { EnemyListComponent } from './enemy-list.component'\nimport { EnemyListService } from './services/enemy-list.service'\nimport { LoaderService } from './services/loader.service'\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatTableModule,\n        MatCheckboxModule,\n        FormsModule,\n    ],\n    declarations: [\n        EnemyListComponent,\n    ],\n    exports: [\n        EnemyListComponent,\n    ],\n    providers: [\n        EnemyListService,\n        LoaderService,\n    ],\n})\nexport class EnemyListModule {}\n","export class Attributes {\n\n    // tslint:disable-next-line:variable-name\n    public created_at: string\n    public level: number\n    public name: string\n    public payment: string\n    public reason: string\n    // tslint:disable-next-line:variable-name\n    public resource_type: string\n    public vocation: number\n\n    public static createInstance(input: any): Attributes {\n        const self: Attributes = new Attributes()\n\n        for (const prop in input) {\n            self[prop] = input[prop]\n        }\n\n        return self\n    }\n}\n","import { Attributes } from './attributes'\n\nexport class Enemy {\n\n    public id: number\n    public type: string\n    public attributes: Attributes\n\n    constructor(\n        id: number,\n        type: string,\n        attributes: Attributes,\n    ) {\n        this.id = id\n        this.type = type\n        this.attributes = Attributes.createInstance(attributes)\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { map, tap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { Enemy } from '../models/enemy'\nimport { Attributes } from './../models/attributes'\nimport { LoaderService } from './loader.service'\n\n@Injectable()\nexport class EnemyListService {\n\n    constructor(\n        private httpClient: HttpClient,\n        private loaderService: LoaderService,\n    ) { }\n\n    public getHuntedPlayers(onlineOnly: boolean = false): Observable<any> {\n        const url: string = onlineOnly ? `${environment.apiBaseUrl}/enemies?online=${onlineOnly}` : `${environment.apiBaseUrl}/enemies`\n        this.loaderService.show$.next(true)\n\n        return this.httpClient\n            .get<{data: [{id: number, type: string, attributes: Attributes}]}>(url)\n            .pipe(\n                map(data => data.data),\n                map(json => json.map(data => new Enemy(data.id, data.type, data.attributes))),\n                tap(() => this.loaderService.show$.next(false)),\n            )\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { BehaviorSubject } from 'rxjs'\n\n@Injectable()\nexport class LoaderService {\n    public show$: BehaviorSubject<boolean> = new BehaviorSubject(true)\n}\n","module.exports = \"<div *ngIf=\\\"isShown$ | async\\\" class=\\\"container\\\">\\n    <mat-spinner></mat-spinner>\\n</div>\"","module.exports = \":host .container {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyeWsuZnVocm1hbi9Eb2N1bWVudHMvV29ya3NwYWNlL3RpYmlhLWVuZW15bGlzdC9zcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSxtQkFBa0I7RUFDbEIsT0FBTTtFQUNOLFFBQU87RUFDUCxVQUFTO0VBQ1QsU0FBUTtFQUNSLGNBQWE7RUFDYixvQkFBbUI7RUFDbkIsd0JBQXVCO0VBQ3ZCLHdCQUF1QixFQUMxQiIsImZpbGUiOiJzcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgLmNvbnRhaW5lciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgfVxufSJdfQ== */\"","import { Component } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { LoaderService } from './../enemy-list/services/loader.service'\n\n@Component({\n    selector: 'app-loader',\n    templateUrl: './loader.component.html',\n    styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent {\n\n    public isShown$: Observable<boolean> = this.loaderService.show$\n\n    constructor(\n        private loaderService: LoaderService,\n    ) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiBaseUrl: 'https://huntedlist-api.herokuapp.com/',\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n    enableProdMode()\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err))\n"],"sourceRoot":""}